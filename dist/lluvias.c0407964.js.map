{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-f657b8e265de81d7.js","js/simulationCore.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"f3fe9130c0407964\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","// js/simulationCore.js\nclass SimulationCore {\n    constructor(gridResolution, mapGenerator, settlementManager) {\n        this.gridResolution = gridResolution;\n        this.mapGenerator = mapGenerator;\n        this.settlementManager = settlementManager;\n\n        this.heightMap = null;\n        this.waterMap = null;\n        this.cloudMap = null;\n        this.riskMap = null;\n        \n        // Simulation parameters optimizados para mejor simulación de agua\n        this.RAINFALL_AMOUNT = 0.5; // Aumentado para más lluvia\n        this.CLOUDINESS_FACTOR = 1.0; // Máxima densidad de nubes\n        this.FLOW_RATE_FACTOR = 0.5; // Mayor velocidad de flujo\n        this.BASE_INFILTRATION_RATE = 0.00001; // Infiltración mínima\n        this.MAX_WATER_HEIGHT = 10.0; // Mayor capacidad de agua\n        this.NUM_RAINDROPS_PER_FRAME = 2000; // Menos gotas por frame para mejor rendimiento\n        this.FLOW_SUB_STEPS = 3; // Reducido para eficiencia (antes 2, ahora 3, pero se usará 2 en _simulateWaterFlow)\n        this.cloudOffset = 0;\n        this.cloudSpeed = 0.008;\n\n        this.initializeMaps();\n    }\n\n    initializeMaps() {\n        this.heightMap = this.mapGenerator.generateHeightMap();\n        this.waterMap = new Float32Array(this.gridResolution * this.gridResolution).fill(0);\n        this.cloudMap = this.mapGenerator.generateCloudMap(this.cloudOffset);\n        // computeRiskMap ahora es una función pura que toma waterMap y heightMap\n        this.riskMap = this._computeRiskMap(this.waterMap, this.heightMap);\n        this.settlementManager.heightMap = this.heightMap; // Ensure settlement manager has updated heightmap\n        this.settlementManager.generateSettlements(); // Generate settlements based on new map\n    }\n\n    resetSimulation() {\n        this.initializeMaps();\n    }\n\n    // Funciones de cálculo puro (sin modificar el estado de la clase directamente)\n\n    /**\n     * Computes the risk map based on current water and height maps.\n     * @param {Float32Array} waterMap - The current water map.\n     * @param {Float32Array} heightMap - The current height map.\n     * @returns {Array<Object>} The computed risk map.\n     */\n    _computeRiskMap(waterMap, heightMap) {\n        const riskMap = [];\n        const len = this.gridResolution * this.gridResolution;\n        for (let i = 0; i < len; i++) {\n            const water = waterMap[i];\n            const terrain = heightMap[i];\n\n            // Flood risk: Proportional to water depth above a certain threshold of terrain\n            let floodRisk = Math.max(0, water - (terrain * 0.1)); // Water above 10% of terrain height\n            floodRisk = Math.min(1, floodRisk * 5); // Scale and cap at 1\n\n            // Landslide risk: Higher terrain + some water makes it risky\n            let landslideRisk = 0;\n            if (terrain > 0.5 && water > 0.05) { // Only high terrain and some water causes risk\n                landslideRisk = (terrain - 0.5) * 2 + (water - 0.05) * 3; // Terrain contribution + water contribution\n            }\n            landslideRisk = Math.min(1, landslideRisk); // Cap at 1\n\n            riskMap.push({ flood: floodRisk, landslide: landslideRisk });\n        }\n        return riskMap;\n    }\n\n    /**\n     * Applies rainfall and infiltration to the water map.\n     * @param {Float32Array} currentWaterMap - The water map before rainfall and infiltration.\n     * @param {Float32Array} heightMap - The height map.\n     * @param {Float32Array} cloudMap - The cloud map.\n     * @param {number} rainfallAmount - The base amount of rainfall.\n     * @param {number} baseInfiltrationRate - The base rate of water infiltration into terrain.\n     * @param {number} maxWaterHeight - The maximum allowed water height.\n     * @param {number} numRaindropsPerFrame - Number of raindrops to simulate per frame.\n     * @returns {Float32Array} The new water map after rainfall and infiltration.\n     */\n    _applyRainfallAndInfiltration(currentWaterMap, heightMap, cloudMap, rainfallAmount, baseInfiltrationRate, maxWaterHeight, numRaindropsPerFrame) {\n        const newWaterMap = new Float32Array(currentWaterMap); // Create a new array for immutability\n        const len = newWaterMap.length;\n\n        // Simulación de gotas: solo caen donde hay nubes, y la cantidad depende de la densidad de nubes\n        for (let i = 0; i < numRaindropsPerFrame; i++) {\n            const idx = (Math.random() * len) | 0;\n            const cloudDensity = cloudMap[idx];\n            // Solo dejar caer gota si hay nube significativa\n            if (cloudDensity > 0.2) {\n                // La cantidad de agua depende de la densidad de la nube\n                const rain = rainfallAmount * cloudDensity;\n                newWaterMap[idx] += rain;\n            }\n        }\n\n        // Infiltración y evaporación\n        for (let i = 0; i < len; i++) {\n            let currentWater = newWaterMap[i];\n            let effectiveInfiltration = baseInfiltrationRate;\n\n            // Infiltration logic from original, applied to newWaterMap\n            if (currentWater > 1.0) effectiveInfiltration *= 0.1;\n            else if (heightMap[i] > 0.7) effectiveInfiltration *= 2.0;\n\n            currentWater = Math.max(0, currentWater - effectiveInfiltration);\n            // Evaporación mínima\n            currentWater *= 0.99998;\n            newWaterMap[i] = Math.min(currentWater, maxWaterHeight);\n        }\n        return newWaterMap;\n    }\n\n    /**\n     * Simulates water flow across the map.\n     * @param {Float32Array} currentWaterMap - The water map before flow simulation.\n     * @param {Float32Array} heightMap - The height map.\n     * @param {number} gridResolution - The resolution of the grid (width/height).\n     * @param {number} flowRateFactor - Factor controlling the speed of water flow.\n     * @returns {Float32Array} The new water map after flow simulation.\n     */\n    _simulateWaterFlow(currentWaterMap, heightMap, gridResolution, flowRateFactor) {\n        const w = gridResolution;\n        const h = gridResolution;\n        let waterIter = new Float32Array(currentWaterMap); // Start with a copy for iterative updates\n        let next_water_buffer = new Float32Array(currentWaterMap.length); // Buffer for next state\n\n        const MAX_ITER = 2; // Only 2 sub-pasos para eficiencia\n        const MIN_FLOW = 0.0001;\n        const FLOW_RATE = 0.18 * flowRateFactor;\n\n        for (let iter = 0; iter < MAX_ITER; iter++) {\n            // Copy current water state to buffer before calculating next state\n            next_water_buffer.set(waterIter);\n\n            for (let y = 0; y < h; y++) {\n                for (let x = 0; x < w; x++) {\n                    const idx = y * w + x;\n                    const h0 = heightMap[idx] + waterIter[idx]; // Use waterIter for current height\n                    \n                    const neighbors = [\n                        [x, y - 1], // N\n                        [x, y + 1], // S\n                        [x - 1, y], // O\n                        [x + 1, y]  // E\n                    ];\n\n                    for (const [nx, ny] of neighbors) {\n                        if (nx < 0 || nx >= w || ny < 0 || ny >= h) continue;\n                        const nidx = ny * w + nx;\n                        const h1 = heightMap[nidx] + waterIter[nidx]; // Use waterIter for neighbor height\n\n                        if (h0 > h1 + MIN_FLOW) {\n                            // Flujo proporcional a la diferencia de altura\n                            // Ensure flow does not exceed available water at current cell\n                            const flow = Math.min((h0 - h1) * FLOW_RATE, waterIter[idx]); \n                            \n                            if (flow > MIN_FLOW) {\n                                next_water_buffer[idx] -= flow;\n                                next_water_buffer[nidx] += flow;\n                            }\n                        }\n                    }\n                }\n            }\n            // Update waterIter for the next sub-step\n            waterIter.set(next_water_buffer);\n        }\n        return waterIter; // Return the final water map after all sub-steps\n    }\n    \n    // Función de cálculo de escorrentía, diseñada para ser funcional\n    /**\n     * Calculates and applies drainage and basin accumulation.\n     * @param {Float32Array} currentWaterMap - The water map before drainage.\n     * @param {Float32Array} heightMap - The height map.\n     * @param {number} gridResolution - The resolution of the grid.\n     * @returns {Float32Array} The new water map after drainage.\n     */\n    _applyDrainage(currentWaterMap, heightMap, gridResolution) {\n        const newWaterMap = new Float32Array(currentWaterMap);\n        const SECONDS_PER_FRAME = 0.1; // Assumed from original snippet. This should ideally be passed as a param or a constant.\n        const w = gridResolution;\n        const h = gridResolution;\n\n        for (let y = 0; y < h; y++) {\n            for (let x = 0; x < w; x++) {\n                const idx = y * w + x;\n                const cellWater = newWaterMap[idx];\n                const cellHeight = heightMap[idx];\n\n                // Drainage proportional to height\n                const drainage = cellHeight * 0.15 * SECONDS_PER_FRAME;\n                newWaterMap[idx] = Math.max(0, cellWater - drainage);\n\n                // Determine downstream cell based on height for simple basin accumulation\n                // This is a simplified approach. A more robust solution would involve proper flow direction algorithms.\n                let minNeighborHeight = Infinity;\n                let downstreamIdx = -1;\n\n                const neighbors = [\n                    [x, y - 1], // N\n                    [x, y + 1], // S\n                    [x - 1, y], // O\n                    [x + 1, y]  // E\n                ];\n\n                for (const [nx, ny] of neighbors) {\n                    if (nx >= 0 && nx < w && ny >= 0 && ny < h) {\n                        const nidx = ny * w + nx;\n                        const neighborTotalHeight = heightMap[nidx] + newWaterMap[nidx]; // Consider water level too\n                        if (neighborTotalHeight < minNeighborHeight) {\n                            minNeighborHeight = neighborTotalHeight;\n                            downstreamIdx = nidx;\n                        }\n                    }\n                }\n                \n                // Accumulate in cuencas (if a downstream cell is found)\n                if (downstreamIdx !== -1 && heightMap[idx] + cellWater > minNeighborHeight + 0.001) { // Only flow if current cell is higher\n                     // Apply a fraction of the drained water to the downstream cell\n                    newWaterMap[downstreamIdx] += drainage * 0.7; // 70% of drained water goes downstream\n                }\n            }\n        }\n        return newWaterMap;\n    }\n\n\n    updateSimulation() {\n        // Actualizar el offset de la nube y regenerar el mapa de nubes\n        this.cloudOffset += this.cloudSpeed;\n        this.cloudMap = this.mapGenerator.generateCloudMap(this.cloudOffset);\n\n        // Paso 1: Aplicar lluvia e infiltración\n        // Se llama a la función pura y se asigna el resultado a this.waterMap\n        this.waterMap = this._applyRainfallAndInfiltration(\n            this.waterMap,\n            this.heightMap,\n            this.cloudMap,\n            this.RAINFALL_AMOUNT,\n            this.BASE_INFILTRATION_RATE,\n            this.MAX_WATER_HEIGHT,\n            this.NUM_RAINDROPS_PER_FRAME\n        );\n\n        // Paso 2: Simular el flujo de agua\n        // Se llama a la función pura y se asigna el resultado a this.waterMap\n        this.waterMap = this._simulateWaterFlow(\n            this.waterMap,\n            this.heightMap,\n            this.gridResolution,\n            this.FLOW_RATE_FACTOR\n        );\n\n        // Paso 3: Aplicar drenaje y acumulación en cuencas (el snippet de abajo)\n        // Se llama a la función pura y se asigna el resultado a this.waterMap\n        this.waterMap = this._applyDrainage(\n            this.waterMap,\n            this.heightMap,\n            this.gridResolution\n        );\n\n        // Paso 4: Recalcular el mapa de riesgo con el nuevo waterMap\n        // Se llama a la función pura y se asigna el resultado a this.riskMap\n        this.riskMap = this._computeRiskMap(this.waterMap, this.heightMap);\n    }\n\n    // Getters for renderer to access simulation data\n    getMaps() {\n        return {\n            heightMap: this.heightMap,\n            waterMap: this.waterMap,\n            cloudMap: this.cloudMap,\n            riskMap: this.riskMap\n        };\n    }\n\n    getSettings() {\n        return {\n            cloudinessFactor: this.CLOUDINESS_FACTOR,\n            showClouds: this.SHOW_CLOUDS, // This needs to be set from controls\n            baseInfiltrationRate: this.BASE_INFILTRATION_RATE\n        };\n    }\n\n    // Setters for controls to modify simulation parameters\n    setRainfallAmount(amount) { this.RAINFALL_AMOUNT = amount; }\n    setCloudinessFactor(factor) { this.CLOUDINESS_FACTOR = factor; }\n    setFlowRateFactor(factor) { this.FLOW_RATE_FACTOR = factor; }\n    setBaseInfiltrationRate(rate) { this.BASE_INFILTRATION_RATE = rate; }\n    setShowClouds(show) { this.SHOW_CLOUDS = show; } // For the renderer to know if clouds should be drawn\n}\n\nexport { SimulationCore };"],"names":[],"version":3,"file":"lluvias.c0407964.js.map","sourceRoot":"/__parcel_source_root/"}